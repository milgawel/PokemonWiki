{"version":3,"sources":["assets/logo.png","assets/image.png","theme/GlobalStyle.js","templates/MainTemplate.js","components/atoms/Pokemon.js","components/molecules/Pagination.js","components/molecules/PokeList.js","views/MainView.js","components/molecules/StatsTable.js","components/molecules/PokemonData.js","views/PokemonView.js","views/Root.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Wrapper","styled","div","MainTemplate","children","Image","img","Cell","p","Cellx","Celly","Cellz","Pokemon","keyValue","id","name","type","minLvl","evolution","as","Link","to","src","alt","onClick","Container","Button","NavLink","withRouter","props","pathname","location","page","Number","substr","List","ListHeader","ul","PokeList","MappedPokeList","pokemons","map","pokemon","key","logo","MainView","state","offset","translateType","addZerosToNumber","number","fetchPokemons","fetch","then","response","json","data","results","forEach","url","newData","types","species","evolution_chain","chain","evolves_to","evolution_details","length","min_level","push","sort","a","b","setState","catch","err","console","log","this","InitiateFunction","prevProps","image","Component","Table","TableHeader","Row","Value","StatsTable","stats","attack","defense","spatt","spdef","hp","defaultProps","PropTypes","shape","TextContainer","PokemonData","typo","gender","region","presenceWild","capturePossibility","difficultyCatching","presenceShiny","addedBy","translateTypeOfHabitat","translateTypeOfPokemon","style","textTransform","LogoImage","PokeImage","LowerContainer","PageButton","button","PokeName","PokeNameMobile","defence","spattack","spdefence","FetchStats","match","params","named","el","stat","base_stat","gender_rate","pokedex_numbers","pokedex","habitat","capture_rate","Logo","history","identifier","Math","floor","Root","basename","process","exact","path","component","PokemonView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd02424c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.95f96396.png\";","module.exports = __webpack_public_path__ + \"static/media/image.6f92eb41.png\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,*::after,*::before\r\n  {\r\n      margin:0;\r\n      padding:0;\r\n      box-sizing:border-box;\r\n  }\r\n  body{\r\n    overflow-x:hidden;\r\n  }\r\n    \r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 98vw;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst MainTemplate = ({ children }) => (\r\n  <Wrapper>\r\n    <GlobalStyle />\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nMainTemplate.propTypes = { children: PropTypes.element.isRequired };\r\n\r\nexport default MainTemplate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Image = styled.img`\r\n  height: 70%;\r\n  margin: 0 auto;\r\n  margin-top: 10%;\r\n`;\r\n\r\nconst Cell = styled.p`\r\n  color: #306ab5;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  height: 80px;\r\n  line-height: 80px;\r\n  margin-top: 0px;\r\n  padding: 0px;\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Cellx = styled(Cell)``;\r\nconst Celly = styled(Cell)``;\r\nconst Cellz = styled(Cell)`\r\n  display: none;\r\n  color: #f9e01d;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 1fr 1fr 0.5fr 1fr 1fr;\r\n  background-color: #f4f4f4;\r\n  margin-bottom: 2px;\r\n  height: 80px;\r\n  text-decoration: none;\r\n  min-width: 550px;\r\n\r\n  &:hover {\r\n    background-color: #306ab5;\r\n  }\r\n\r\n  &:hover ${Cellx} {\r\n    color: #f9e01d;\r\n  }\r\n  &:hover ${Celly} {\r\n    display: none;\r\n  }\r\n  &:hover ${Cellz} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Pokemon = ({ keyValue, id, name, type, minLvl, evolution }) => {\r\n  return (\r\n    <Wrapper as={Link} to={`/pokemon/${keyValue}`}>\r\n      <Cell>{id}</Cell>\r\n      <Image\r\n        src={`https://pokeres.bastionbot.org/images/pokemon/${keyValue}.png`}\r\n        alt={`pokemon ${name}`}\r\n      />\r\n      <Cellx>{name}</Cellx>\r\n      <Cell>{minLvl}</Cell>\r\n      <Cell>{type}</Cell>\r\n      <Celly>{evolution}</Celly>\r\n      <Cellz onClick={() => <Redirect to={`/pokemon/${keyValue}`} />}>więcej </Cellz>\r\n    </Wrapper>\r\n  );\r\n};\r\nPokemon.propTypes = {\r\n  keyValue: PropTypes.number.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  minLvl: PropTypes.string.isRequired,\r\n  evolution: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled(NavLink)`\r\n  background-color: #f9e01d;\r\n  color: #306ab5;\r\n  height: 40px;\r\n  width: 40px;\r\n  text-align: center;\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  line-height: 40px;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 0 4px;\r\n  text-decoration: none;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &.active {\r\n    background-color: #306ab5;\r\n    color: #f9e01d;\r\n  }\r\n  &:hover {\r\n    /* transform: scale(1.05); */\r\n    box-shadow: 0px 0px 4px black;\r\n  }\r\n`;\r\n\r\nconst Pagination = (props) => {\r\n  const {\r\n    location: { pathname },\r\n  } = props;\r\n  const page = Number(pathname.substr(1));\r\n\r\n  // console.log(typeof page);\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Button to={`/${page <= 2 ? 1 : page - 2}`}>{`${page <= 2 ? 1 : page - 2}`}</Button>\r\n        <Button to={`/${page < 3 ? 2 : page - 1}`}>{`${page < 3 ? 2 : page - 1}`}</Button>\r\n        <Button to={`/${page < 4 ? 3 : page}`}>{`${page < 4 ? 3 : page}`}</Button>\r\n        <Button to={`/${page < 4 ? 4 : page + 1}`}>{`${page < 4 ? 4 : page + 1}`}</Button>\r\n        <Button to={`/${page < 4 ? 5 : page + 2}`}>{`${page < 4 ? 5 : page + 2}`}</Button>\r\n        <Button to={`/${page < 4 ? 6 : page + 3}`}>{`${page < 4 ? 6 : page + 3}`}</Button>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(Pagination);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from 'assets/logo.png';\r\nimport Pokemon from 'components/atoms/Pokemon';\r\nimport Pagination from 'components/molecules/Pagination';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 49%;\r\n  position: relative;\r\n  padding-right: 15px;\r\n  @media screen and (max-width: 1260px) {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    width: 98%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 40%;\r\n  margin: 10px auto 30px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 767px) {\r\n    overflow-x: scroll;\r\n  }\r\n`;\r\n\r\nconst ListHeader = styled.ul`\r\n  width: 100%;\r\n  min-width: 550px;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 1fr 1fr 0.5fr 1fr 1fr;\r\n  padding: 0;\r\n  margin-bottom: 2px;\r\n  background-color: #f9e01d;\r\n`;\r\n\r\nconst Cell = styled.p`\r\n  text-align: center;\r\n  height: 40px;\r\n  color: #306ab5;\r\n  text-transform: uppercase;\r\n  font-family: sans-serif;\r\n  line-height: 40px;\r\n  font-size: 16px;\r\n  font-weight: 900;\r\n  font-style: italic;\r\n`;\r\n\r\nconst PokeList = ({ pokemons }) => {\r\n  // list of pokemons mapped from array\r\n  const MappedPokeList = pokemons.map((pokemon) => {\r\n    const { key, id, name, type, minLvl, evolution } = pokemon;\r\n\r\n    return (\r\n      <Pokemon\r\n        key={key}\r\n        keyValue={key}\r\n        id={id}\r\n        name={name}\r\n        type={type}\r\n        minLvl={minLvl}\r\n        evolution={evolution}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={logo} alt=\"logo\" />\r\n      {/* {console.log(pokemons)} */}\r\n      <List>\r\n        <ListHeader>\r\n          <Cell>id</Cell>\r\n          <Cell>pokemon</Cell>\r\n          <Cell>nazwa</Cell>\r\n          <Cell>min.lvl</Cell>\r\n          <Cell>typ</Cell>\r\n          <Cell>ewolucja</Cell>\r\n        </ListHeader>\r\n        {MappedPokeList}\r\n      </List>\r\n\r\n      <Pagination />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokeList.propTypes = {\r\n  pokemons: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default PokeList;\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport image from 'assets/image.png';\nimport PokeList from 'components/molecules/PokeList';\nimport MainTemplate from 'templates/MainTemplate';\nimport PropTypes from 'prop-types';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  overflow: hidden;\n  @media screen and (max-width: 1260px) {\n    flex-direction: column;\n  }\n`;\n\nconst Image = styled.img`\n  position: relative;\n  width: 48%;\n  height: auto;\n  margin-right: 1%;\n  object-fit: contain;\n  top: 10px;\n  padding: 5px;\n  @media screen and (max-width: 1260px) {\n    display: none;\n  }\n`;\n\nclass MainView extends Component {\n  state = {\n    pokemons: [],\n    offset: 0,\n  };\n\n  componentDidMount() {\n    this.InitiateFunction();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: { pathname },\n    } = this.props;\n    if (prevProps.location.pathname !== pathname) {\n      this.InitiateFunction();\n    }\n  }\n\n  translateType = (type) => {\n    switch (type) {\n      case 'grass':\n        return 'trawiasty';\n      case 'fire':\n        return 'ognisty';\n      case 'water':\n        return 'wodny';\n      case 'bug':\n        return 'robaczy';\n      case 'ice':\n        return 'lodowy';\n      case 'normal':\n        return 'normalny';\n      case 'electric':\n        return 'elektryczny';\n      case 'poison':\n        return 'trujący';\n      case 'ghost':\n        return 'duch';\n      case 'ground':\n        return 'ziemny';\n      case 'rock':\n        return 'kamienny';\n      case 'psychic':\n        return 'psychiczny';\n      case 'flying':\n        return 'latający';\n      case 'fighting':\n        return 'walczący';\n      case 'fairy':\n        return 'bajkowy';\n      case 'dragon':\n        return 'smoczy';\n      case 'steel':\n        return 'stalowy';\n      case 'dark':\n        return 'mroczny';\n      default:\n        return type;\n    }\n  };\n\n  addZerosToNumber = (number) => {\n    if (number < 10) return `00${number}`;\n    if (number < 100 && number > 9) return `0${number}`;\n    return number;\n  };\n\n  // get data about pokemons\n  fetchPokemons = () => {\n    const { offset } = this.state;\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${10}&offset=${offset}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const pokemons = [];\n        // get infos about single specific pokemon\n        data.results.forEach((pokemon) => {\n          let key = '';\n          let id = '';\n          let name = '';\n          let minLvl = '';\n          let type = '';\n          let evolution = '';\n\n          fetch(pokemon.url)\n            .then((response) => response.json())\n            .then((newData) => {\n              key = newData.id;\n              id = newData.id;\n              name = newData.name;\n              type = newData.types[0].type.name;\n              return fetch(newData.species.url);\n            })\n            .then((response) => response.json())\n            .then((newData) => {\n              return fetch(newData.evolution_chain.url);\n            })\n            .then((response) => response.json())\n            .then((newData) => {\n              if (newData.chain.species.name === name) {\n                if (newData.chain.evolves_to[0]) {\n                  evolution = newData.chain.evolves_to[0].species.name;\n                  minLvl = '1';\n                } else if (newData.chain.evolution_details.length === 0) {\n                  evolution = '';\n                  minLvl = '1';\n                } else {\n                  minLvl = newData.chain.evolves_to[0].evolution_details[0].min_level;\n                }\n                if (minLvl === null) minLvl = '1';\n              } else if (newData.chain.evolves_to[0].species.name === name) {\n                if (newData.chain.evolves_to[0].evolves_to[0]) {\n                  evolution = newData.chain.evolves_to[0].evolves_to[0].species.name;\n                  minLvl = newData.chain.evolves_to[0].evolution_details[0].min_level;\n                } else {\n                  minLvl = newData.chain.evolves_to[0].evolution_details[0].min_level;\n                }\n                if (minLvl === null) minLvl = '1';\n              } else {\n                evolution = '';\n                if (newData.chain.evolves_to[1]) {\n                  minLvl = newData.chain.evolves_to[1].evolution_details[0].min_level;\n                } else\n                  minLvl = newData.chain.evolves_to[0].evolves_to[0].evolution_details[0].min_level;\n\n                if (minLvl === null) minLvl = '1';\n              }\n\n              type = this.translateType(type);\n\n              id = this.addZerosToNumber(id);\n              minLvl = this.addZerosToNumber(minLvl);\n              pokemons.push({\n                key,\n                id,\n                name,\n                type,\n                minLvl,\n                evolution,\n              });\n\n              pokemons.sort((a, b) => {\n                return a.id - b.id;\n              });\n              this.setState({\n                pokemons,\n              });\n            })\n\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  InitiateFunction() {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    const offset = `${pathname.substr(1)}0` - 10;\n\n    this.setState(\n      {\n        offset,\n      },\n      () => {\n        this.fetchPokemons();\n      },\n    );\n  }\n\n  render() {\n    const { pokemons } = this.state;\n    return (\n      <MainTemplate>\n        <Wrapper>\n          <Image src={image} alt=\"pokemons\" />\n          <PokeList pokemons={pokemons} />\n        </Wrapper>\n      </MainTemplate>\n    );\n  }\n}\n\nMainView.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MainView;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Table = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 27%;\r\n  margin: 3% 3% 3% 0;\r\n  @media screen and (max-width: 767px) {\r\n    width: 90%;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nconst TableHeader = styled.p`\r\n  text-align: center;\r\n  height: 40px;\r\n  color: #306ab5;\r\n  text-transform: uppercase;\r\n  font-family: sans-serif;\r\n  line-height: 40px;\r\n  font-size: 16px;\r\n  font-weight: 900;\r\n  font-style: italic;\r\n  background-color: #f9e01d;\r\n  text-align: left;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1.3fr 0.7fr;\r\n`;\r\n\r\nconst Cell = styled.p`\r\n  color: #306ab5;\r\n  text-transform: uppercase;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  margin-top: 0px;\r\n\r\n  padding-left: 20px;\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  background-color: #f4f4f4;\r\n  margin-bottom: 2px;\r\n  margin-left: 2px;\r\n`;\r\n\r\nconst Value = styled(Cell)`\r\n  text-align: center;\r\n  padding: 0px;\r\n`;\r\n\r\nconst StatsTable = (props) => {\r\n  const {\r\n    stats: { attack, defense, spatt, spdef, hp },\r\n  } = props;\r\n\r\n  return (\r\n    <Table>\r\n      <TableHeader>Statystyki</TableHeader>\r\n      <Row>\r\n        <Cell>Atak</Cell>\r\n        <Value>{attack}</Value>\r\n      </Row>\r\n      <Row>\r\n        <Cell>Obrona</Cell>\r\n        <Value>{defense}</Value>\r\n      </Row>\r\n      <Row>\r\n        <Cell>SP.atak</Cell>\r\n        <Value>{spatt}</Value>\r\n      </Row>\r\n      <Row>\r\n        <Cell>SP.obrona</Cell>\r\n        <Value>{spdef}</Value>\r\n      </Row>\r\n      <Row>\r\n        <Cell>Życie</Cell>\r\n        <Value>{hp}</Value>\r\n      </Row>\r\n    </Table>\r\n  );\r\n};\r\n\r\nStatsTable.propTypes = {\r\n  stats: PropTypes.shape({\r\n    attack: PropTypes.string,\r\n    defense: PropTypes.string,\r\n    spatt: PropTypes.string,\r\n    spdef: PropTypes.string,\r\n    hp: PropTypes.string,\r\n  }),\r\n};\r\n\r\nStatsTable.defaultProps = {\r\n  stats: PropTypes.shape({\r\n    attack: '',\r\n    defense: '',\r\n    spatt: '',\r\n    spdef: '',\r\n    hp: '',\r\n  }),\r\n};\r\n\r\nexport default StatsTable;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 27%;\r\n  margin: 3% 0 3% 3%;\r\n  @media screen and (max-width: 767px) {\r\n    width: 90%;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  width: 100%;\r\n  color: #306ab5;\r\n  line-height: 25px;\r\n  padding: 0px;\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  @media screen and (max-width: 767px) {\r\n    width: 90%;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst PokemonData = ({\r\n  name,\r\n  type,\r\n  gender,\r\n  region,\r\n  presenceWild,\r\n  capturePossibility,\r\n  difficultyCatching,\r\n  presenceShiny,\r\n  addedBy,\r\n}) => {\r\n  const translateTypeOfHabitat = (typo) => {\r\n    switch (typo) {\r\n      case 'grassland':\r\n        return 'Łąka';\r\n      case 'mountain':\r\n        return 'Góry';\r\n      case 'waters-edge':\r\n        return 'Wybrzeże';\r\n      case 'forest':\r\n        return 'Las';\r\n      case 'rough-terrain':\r\n        return 'Łąka Las Góry';\r\n      case 'sea':\r\n        return 'Morze';\r\n      case 'cave':\r\n        return 'Jaskinia';\r\n      case 'urban':\r\n        return 'Miasto';\r\n      case 'rare':\r\n        return 'Brak okreśłonego miejsca';\r\n      default:\r\n        return type;\r\n    }\r\n  };\r\n\r\n  const difficultyType = (typo) => {\r\n    if (typo > 150) {\r\n      return 'Łatwa';\r\n    }\r\n    if (typo < 40) {\r\n      return 'Trudna';\r\n    }\r\n    return 'Średnia';\r\n  };\r\n\r\n  const translateTypeOfPokemon = (typo) => {\r\n    switch (typo) {\r\n      case 'grass':\r\n        return 'Trawiasty';\r\n      case 'fire':\r\n        return 'Ognisty';\r\n      case 'water':\r\n        return 'Wodny';\r\n      case 'bug':\r\n        return 'Robaczy';\r\n      case 'ice':\r\n        return 'Lodowy';\r\n      case 'normal':\r\n        return 'Normalny';\r\n      case 'electric':\r\n        return 'Elektryczny';\r\n      case 'poison':\r\n        return 'Trujący';\r\n      case 'ghost':\r\n        return 'Duch';\r\n      case 'ground':\r\n        return 'Ziemny';\r\n      case 'rock':\r\n        return 'Kamienny';\r\n      case 'psychic':\r\n        return 'Psychiczny';\r\n      case 'flying':\r\n        return 'Latający';\r\n      case 'fighting':\r\n        return 'Walczący';\r\n      case 'fairy':\r\n        return 'Bajkowy';\r\n      case 'dragon':\r\n        return 'Smoczy';\r\n      case 'steel':\r\n        return 'Stalowy';\r\n      case 'dark':\r\n        return 'Mroczny';\r\n      default:\r\n        return type;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <TextContainer>\r\n        <p style={{ textTransform: 'capitalize' }}>\r\n          <b>Nazwa:</b> {name}\r\n        </p>\r\n        <p>\r\n          <b>Typ:</b> {translateTypeOfPokemon(type[0])}\r\n          {type[1] ? ` ${translateTypeOfPokemon(type[1])}` : null}\r\n        </p>\r\n        <p>\r\n          <b>Płeć:</b> {(+gender / 8) * 100}% samica, {100 - (+gender / 8) * 100}% samiec\r\n        </p>\r\n        <p style={{ textTransform: 'capitalize' }}>\r\n          <b>Region:</b>\r\n          {region.length ? ` ${region}` : 'brak informacji'}\r\n        </p>\r\n        <p>\r\n          <b>Występowanie w dziczy:</b>{' '}\r\n          {translateTypeOfHabitat(presenceWild)\r\n            ? translateTypeOfHabitat(presenceWild)\r\n            : 'brak informacji'}\r\n        </p>\r\n        <p>\r\n          <b>Możliwość złapania:</b> {capturePossibility > 1 ? 'Tak' : 'Nie'}\r\n        </p>\r\n        <p>\r\n          <b>Trudność złapania:</b> {difficultyType(difficultyCatching)}\r\n        </p>\r\n        <p>\r\n          <b>Występowanie shiny:</b>{' '}\r\n          {translateTypeOfHabitat(presenceShiny)\r\n            ? translateTypeOfHabitat(presenceShiny)\r\n            : 'brak informacji'}\r\n        </p>\r\n        <p>\r\n          <b>Dodawany do kolekcji przez:</b> {addedBy > 1 ? 'Złapanie' : 'Kupienie'}\r\n        </p>\r\n      </TextContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonData.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\r\n  gender: PropTypes.number,\r\n  region: PropTypes.string.isRequired,\r\n  presenceWild: PropTypes.string.isRequired,\r\n  capturePossibility: PropTypes.number.isRequired,\r\n  difficultyCatching: PropTypes.number.isRequired,\r\n  presenceShiny: PropTypes.string.isRequired,\r\n  addedBy: PropTypes.number.isRequired,\r\n};\r\n\r\nPokemonData.defaultProps = {\r\n  gender: '',\r\n};\r\n\r\nexport default PokemonData;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from 'assets/logo.png';\r\nimport StatsTable from 'components/molecules/StatsTable';\r\nimport PokemonData from 'components/molecules/PokemonData';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: 100vh;\r\n  @media screen and (max-width: 767px) {\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst LogoImage = styled.img`\r\n  margin: 0 auto;\r\n  height: 100px;\r\n  display: block;\r\n  @media screen and (max-width: 767px) {\r\n    width: 60%;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 767px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nconst PokeImage = styled.img`\r\n  width: 35%;\r\n  @media screen and (max-width: 767px) {\r\n    width: 90%;\r\n    display: block;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nconst LowerContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 767px) {\r\n    width: 90%;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nconst PageButton = styled.button`\r\n  text-align: center;\r\n  height: 40px;\r\n  min-width: 140px;\r\n  color: #306ab5;\r\n  text-transform: uppercase;\r\n  font-family: sans-serif;\r\n  line-height: 40px;\r\n  font-size: 16px;\r\n  font-weight: 900;\r\n  font-style: italic;\r\n  background-color: #f9e01d;\r\n  border: 0px;\r\n  outline: none;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  height: 40px;\r\n  color: #306ab5;\r\n  text-transform: uppercase;\r\n  font-family: sans-serif;\r\n  line-height: 40px;\r\n  font-size: 40px;\r\n  font-weight: 900;\r\n  font-style: italic;\r\n  @media screen and (max-width: 767px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst PokeNameMobile = styled(PokeName)`\r\n  display: none;\r\n  text-align: center;\r\n  margin-top: 25px;\r\n  @media screen and (max-width: 767px) {\r\n    display: block;\r\n  }\r\n  @media screen and (max-width: 376px) {\r\n    line-height: 35px;\r\n    font-size: 35px;\r\n  }\r\n`;\r\n\r\nclass Pokemon extends Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    type: '',\r\n    gender: 1,\r\n    region: '',\r\n    presenceWild: '',\r\n    capturePossibility: 1,\r\n    difficultyCatching: 1,\r\n    presenceShiny: '',\r\n    addedBy: 1,\r\n\r\n    stats: { attack: '1', defence: '1', spattack: '1', spdefence: '1', hp: '1' },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.FetchStats();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n    if (prevProps.location.pathname !== pathname) {\r\n      this.FetchStats();\r\n    }\r\n  }\r\n\r\n  addZerosToNumber = (number) => {\r\n    if (number < 10) return `00${number}`;\r\n    if (number < 100 && number > 9) return `0${number}`;\r\n    return number;\r\n  };\r\n\r\n  FetchStats() {\r\n    const {\r\n      match: {\r\n        params: { pokemon },\r\n      },\r\n    } = this.props;\r\n    const id = pokemon;\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}/`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const {\r\n          species: { name },\r\n        } = data;\r\n        const named = name;\r\n        const stats = {};\r\n        data.stats.forEach((el) => {\r\n          if (el.stat.name === 'speed') return;\r\n          if (el.stat.name === 'special-defense') {\r\n            stats['spdef'] = `${el.base_stat}`;\r\n          } else if (el.stat.name === 'special-attack') {\r\n            stats['spatt'] = `${el.base_stat}`;\r\n          } else stats[el.stat.name] = `${el.base_stat}`;\r\n        });\r\n\r\n        const type = [];\r\n        data.types.forEach((el) => type.push(`${el.type.name}`));\r\n        this.setState({ stats, name: named, id, type });\r\n\r\n        return fetch(`https://pokeapi.co/api/v2/pokemon-species/${id}/`);\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const gender = +data.gender_rate;\r\n        const region = data.pokedex_numbers[1].pokedex.name;\r\n        const presenceWild = data.habitat.name;\r\n        const capturePossibility = +data.capture_rate;\r\n        const difficultyCatching = +data.capture_rate;\r\n        const presenceShiny = data.habitat.name;\r\n        const addedBy = +data.capture_rate;\r\n\r\n        this.setState({\r\n          gender,\r\n          region,\r\n          presenceWild,\r\n          capturePossibility,\r\n          difficultyCatching,\r\n          presenceShiny,\r\n          addedBy,\r\n        });\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      stats,\r\n      id,\r\n      name,\r\n      type,\r\n      gender,\r\n      region,\r\n      presenceWild,\r\n      capturePossibility,\r\n      difficultyCatching,\r\n      presenceShiny,\r\n      addedBy,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <LogoImage src={Logo} alt=\"pokemon logo\" />\r\n        <PokeNameMobile>{`${this.addZerosToNumber(id)} ${name}`}</PokeNameMobile>\r\n        <Container>\r\n          <StatsTable stats={stats} />\r\n          {id ? (\r\n            <PokeImage\r\n              src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n              alt={`pokemon `}\r\n            />\r\n          ) : null}\r\n          <PokemonData\r\n            name={name}\r\n            type={type}\r\n            gender={gender}\r\n            region={region}\r\n            presenceWild={presenceWild}\r\n            capturePossibility={capturePossibility}\r\n            difficultyCatching={difficultyCatching}\r\n            presenceShiny={presenceShiny}\r\n            addedBy={addedBy}\r\n          />\r\n        </Container>\r\n\r\n        <LowerContainer>\r\n          <PageButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              const { history } = this.props;\r\n              const { identifier = id } = this.state;\r\n              history.push(`/${identifier < 10 ? '1' : `${Math.floor(identifier / 10 + 1)}`}`);\r\n            }}\r\n          >\r\n            {'< powrót'}\r\n          </PageButton>\r\n          <PokeName>{`${this.addZerosToNumber(id)} ${name}`}</PokeName>\r\n          <PageButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              const { history } = this.props;\r\n              history.push(`/pokemon/${+id + 1}`);\r\n            }}\r\n          >\r\n            {'następny >'}\r\n          </PageButton>\r\n        </LowerContainer>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nPokemon.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }),\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      pokemon: PropTypes.string.isRequired,\r\n    }),\r\n  }),\r\n};\r\n\r\nPokemon.defaultProps = {\r\n  location: {\r\n    pathname: '',\r\n  },\r\n\r\n  match: {\r\n    params: {\r\n      pokemon: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport MainTemplate from 'templates/MainTemplate';\r\nimport MainView from 'views/MainView';\r\nimport PokemonView from 'views/PokemonView';\r\n\r\nconst Root = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <MainTemplate>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={() => <Redirect to=\"/1\" />} />\r\n        <Route path=\"/pokemon/:pokemon\" component={PokemonView} />\r\n        <Route path=\"/:page\" component={MainView} />\r\n      </Switch>\r\n    </MainTemplate>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}